
@{
    ViewData["Title"] = "Närmast dig";
}

<h2>De 5 närmsta platserna</h2>

<div id="near" class="table-responsive, container-fluid">
    <table id="tableNear" class="table table-bordered table-hover">
        <thead class="theadNear">
            <tr class="d-flex trNear">
                <th class="thNear">Namn</th>
                <th class="thNear">Adress</th>
                <th class="thNear">Öppettider</th>
                <th class="thNear">Kommentar</th>
                <th class="thNear">Avstånd</th>
                <th class="thNear"></th>
            </tr>
        </thead>
        <tbody class="tbodyNear">
        </tbody>  
    </table>
</div>


@section Scripts{
    <script src="https://maps.googleapis.com/maps/api/js?&libraries=geometry&key=AIzaSyDnJWp2RVaxP6ISeBRVdte3KmwyUFyQETM&callback=test" async defer></script>

    <script>

        var userPosition;
        var locations = [];
        var distance;
        var sortedLocations = [];

        function test() {
            // Retrieve
            let tempPosition = sessionStorage.getItem("userPosition");

            if (tempPosition) {
                userPosition = getLatLngFromString(tempPosition);
                getNearest();
            }
            else {
                if (navigator.geolocation) {
                    navigator.geolocation.getCurrentPosition(function (position) {
                        userPosition = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);
                        sessionStorage.setItem("userPosition", userPosition);
                        getNearest();
                    });
                }
                else {
                    userPosition = new google.maps.LatLng(55.60617, 13.00024);
                    sessionStorage.setItem("userPosition", userPosition);
                    console.log("position failed!");
                    getNearest();
                }
            }
        }

        function getNearest() {
            $.get("/Map/FindNearestLocations")
                .done(function (result) {
                    for (var i = 0; i < result.length; i++) {
                        getDistance = google.maps.geometry.spherical.computeDistanceBetween(userPosition, getLatLngFromString(result[i].latLng));
                        var location = { name: result[i].name, address: result[i].address, hours: result[i].hours, description: result[i].description, distance: getDistance, position: result[i].latLng };
                        locations.push(location);
                        //locations.push("<tr><td></td><td></td><td></td><td></td><td>" + Math.round(distance) + " m </td></tr>");
                    }
                    sortedLocations = locations.sort(compare);
                    for (var j = 0; j < sortedLocations.length; j++) {
                        if (j < 5) {
                            $(".tbodyNear").append("<tr class='trEdit'><td class='tdNear'>" + sortedLocations[j].name + "</td><td class='tdNear'>" + sortedLocations[j].address + "</td><td class='tdNear'>" + sortedLocations[j].hours + "<td class='tdNear'>" + sortedLocations[j].description + "</td><td class='tdNear'>" + Math.round(sortedLocations[j].distance) + " m </td><td class='tdNear'><input type='button' class='buttonNear' value='Visa på karta' id=" + j + " onclick='sendData(" + j +")'></td></tr>");
                        }
                    }
                });

            
        }

        function sendData(index) {
            dataToSend = sortedLocations[index];
            window.location.href = "/Map/ShowNearestLocation/" + dataToSend.name + "/" + dataToSend.address + "/" + dataToSend.hours + "/" + dataToSend.description + "/" + dataToSend.position;
        }

        function compare(a, b) {
            // Use toUpperCase() to ignore character casing
            const distanceA = a.distance;
            const distanceB = b.distance;

            let comparison = 0;
            if (distanceA > distanceB) {
                comparison = 1;
            } else if (distanceA < distanceB) {
                comparison = -1;
            }
            return comparison;
        }


        function getLatLngFromString(jsonlatlng) {
            var latlang = jsonlatlng.replace(/[()]/g, '');
            var latlng = latlang.split(',');
            locate = new google.maps.LatLng(parseFloat(latlng[0]), parseFloat(latlng[1]));
            return locate;
        }



    </script>

}

